# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: let
  btrfsOptions = subvol: ["subvol=${subvol}" "compress=zstd" "noatime"];
in {
  imports = [
    (modulesPath + "/profiles/qemu-guest.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "virtio_scsi" "sr_mod"];
  boot.initrd.kernelModules = ["virtio_gpu"];
  boot.kernelModules = [];
  boot.extraModulePackages = [];
  boot.kernelParams = ["console=tty"];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/b927425d-7b67-4af5-95d5-1598b83e0001";
    fsType = "btrfs";
    options = btrfsOptions "root";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/A5E5-1ED2";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/b927425d-7b67-4af5-95d5-1598b83e0001";
    fsType = "btrfs";
    options = btrfsOptions "home";
  };

  fileSystems."/persist" = {
    device = "/dev/disk/by-uuid/b927425d-7b67-4af5-95d5-1598b83e0001";
    fsType = "btrfs";
    options = btrfsOptions "persist";
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/b927425d-7b67-4af5-95d5-1598b83e0001";
    fsType = "btrfs";
    options = btrfsOptions "nix";
  };

  fileSystems."/var/log" = {
    device = "/dev/disk/by-uuid/b927425d-7b67-4af5-95d5-1598b83e0001";
    fsType = "btrfs";
    options = btrfsOptions "log";
    neededForBoot = true;
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/289ba3ad-decc-477a-8775-ccb4678e6a49";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
